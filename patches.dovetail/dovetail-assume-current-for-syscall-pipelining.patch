From 658157d25e4dcfe3d3c4c9d50cb873ee0174bec6 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Thu, 6 Feb 2020 15:24:19 +0100
Subject: [PATCH] dovetail: assume current for syscall pipelining

Signed-off-by: Philippe Gerum <rpm@xenomai.org>
---
 include/linux/dovetail.h | 8 ++++----
 kernel/dovetail.c        | 9 +++++----
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/include/linux/dovetail.h b/include/linux/dovetail.h
index 466858c67192..939bff19717f 100644
--- a/include/linux/dovetail.h
+++ b/include/linux/dovetail.h
@@ -39,8 +39,8 @@ struct dovetail_altsched_context {
 
 void inband_task_init(struct task_struct *p);
 
-int pipeline_syscall(struct thread_info *ti,
-		     unsigned long syscall, struct pt_regs *regs);
+int pipeline_syscall(unsigned long syscall,
+		struct pt_regs *regs);
 
 void __oob_trap_notify(unsigned int trapnr,
 		       struct pt_regs *regs);
@@ -219,8 +219,8 @@ void inband_task_init(struct task_struct *p) { }
 #define oob_trap_notify(__trapnr, __regs)	 do { } while (0)
 
 static inline
-int pipeline_syscall(struct thread_info *ti,
-		     unsigned long syscall, struct pt_regs *regs)
+int pipeline_syscall(unsigned long syscall,
+		struct pt_regs *regs)
 {
 	return 0;
 }
diff --git a/kernel/dovetail.c b/kernel/dovetail.c
index 7569ecaee6c1..8c3a627e15f7 100644
--- a/kernel/dovetail.c
+++ b/kernel/dovetail.c
@@ -95,8 +95,9 @@ void dovetail_call_mayday(struct thread_info *ti, struct pt_regs *regs)
 	hard_local_irq_restore(flags);
 }
 
-int __pipeline_syscall(struct thread_info *ti, struct pt_regs *regs)
+int __pipeline_syscall(struct pt_regs *regs)
 {
+	struct thread_info *ti = current_thread_info();
 	struct irq_stage *caller_stage, *target_stage;
 	struct irq_stage_data *p, *this_context;
 	unsigned long flags;
@@ -169,9 +170,9 @@ void sync_inband_irqs(void)
 	hard_local_irq_restore(flags);
 }
 
-int pipeline_syscall(struct thread_info *ti,
-		     unsigned long nr, struct pt_regs *regs)
+int pipeline_syscall(unsigned long nr, struct pt_regs *regs)
 {
+	struct thread_info *ti = current_thread_info();
 	unsigned long local_flags = READ_ONCE(ti_local_flags(ti));
 	int ret;
 
@@ -214,7 +215,7 @@ int pipeline_syscall(struct thread_info *ti,
 	}
 
 	if ((local_flags & _TLF_DOVETAIL) || nr >= NR_syscalls) {
-		ret = __pipeline_syscall(ti, regs);
+		ret = __pipeline_syscall(regs);
 		local_flags = READ_ONCE(ti_local_flags(ti));
 		if (local_flags & _TLF_OOB)
 			return 1; /* don't pass down, no tail work. */
-- 
2.16.4

