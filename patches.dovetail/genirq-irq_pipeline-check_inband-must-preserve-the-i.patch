From e312e7f0e833bbf749a584bdbf2b6a42ca556dea Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Fri, 16 Aug 2019 15:57:54 +0200
Subject: [PATCH] genirq: irq_pipeline: check_inband() must preserve the
 interrupt state

If check_inband() trips, both the in-band and oob interrupt states
must be preserved, not to add even more problems to the
picture. Specifically, we should not call irq_pipeline_oops() which
forcibly disables interrupts virtually and hardware-wise in a panic
path.

check_inband() is not - yet - a panic path, and as such should not
disable in-band interrupts when the oob stage is found stalled when it
should not be. However, we still want to raise the oopsing flag in
order to disable further interrupt-related checks.

This issue had weird consequences like this one:

hard_lock_irq(&lock);
  /* !irqs_disabled(), hard_irqs_disabled(), oob stalled */
  spin_lock_irqsave(&lock2, flags);
     flags = inband_irqsave()
         check_inband() -> local_irq_disable() via irq_pipeline_oops()
         flags eventually denotes a stalled in-band stage
  spin_lock_irqrestore(&lock2, flags);
  /* irqs_disabled() */

At this chance, clarify the related warning message too.

Signed-off-by: Philippe Gerum <rpm@xenomai.org>
---
 kernel/irq/pipeline.c | 21 ++++++++++++++-------
 1 file changed, 14 insertions(+), 7 deletions(-)

diff --git a/kernel/irq/pipeline.c b/kernel/irq/pipeline.c
index d69085713e88..684ebffbfe60 100644
--- a/kernel/irq/pipeline.c
+++ b/kernel/irq/pipeline.c
@@ -1488,17 +1488,24 @@ notrace void check_inband_stage(void)
 
 	hard_smp_local_irq_restore(flags);
 
-	irq_pipeline_oops();
-
 	if (this_stage != &inband_stage)
 		pr_err("IRQ pipeline: some code running in oob context '%s'\n"
 		       "              called an in-band only routine\n",
 		       this_stage->name);
-	else
-		pr_err("IRQ pipeline: oob stage is stalled, "
-		       "probably caused by a bug.\n"
-		       "              A critical section may have been "
-		       "left unterminated.\n");
+	else {
+		pr_err("IRQ pipeline: oob stage found stalled while modifying in-band\n"
+		       "              interrupt state and/or running sleeping code\n");
+		/*
+		 * This will disable all further pipeline debug
+		 * checks, since a wrecked interrupt state is likely
+		 * to trigger many of them, ending up in a terrible
+		 * mess. IOW, the current situation must be fixed
+		 * prior to investigating any subsequent issue that
+		 * might still exist.
+		 */
+		irq_pipeline_oopsing = true;
+	}
+
 	dump_stack();
 }
 EXPORT_SYMBOL(check_inband_stage);
-- 
2.16.4

