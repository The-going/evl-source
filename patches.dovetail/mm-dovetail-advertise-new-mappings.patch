From 146e1e06a58b09a631a745ebfa21f28d6016eaaa Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Sun, 28 Apr 2019 15:35:03 +0200
Subject: [PATCH] mm: dovetail: advertise new mappings

---
 include/linux/vmalloc.h | 1 +
 lib/ioremap.c           | 1 +
 mm/vmalloc.c            | 6 ++++++
 3 files changed, 8 insertions(+)

diff --git a/include/linux/vmalloc.h b/include/linux/vmalloc.h
index 51e131245379..3a0cab9bc6e5 100644
--- a/include/linux/vmalloc.h
+++ b/include/linux/vmalloc.h
@@ -224,5 +224,6 @@ pcpu_free_vm_areas(struct vm_struct **vms, int nr_vms)
 
 int register_vmap_purge_notifier(struct notifier_block *nb);
 int unregister_vmap_purge_notifier(struct notifier_block *nb);
+void arch_advertise_page_mapping(unsigned long start, unsigned long end);
 
 #endif /* _LINUX_VMALLOC_H */
diff --git a/lib/ioremap.c b/lib/ioremap.c
index 063213685563..1414a1a52905 100644
--- a/lib/ioremap.c
+++ b/lib/ioremap.c
@@ -216,6 +216,7 @@ int ioremap_page_range(unsigned long addr,
 			break;
 	} while (pgd++, phys_addr += (next - addr), addr = next, addr != end);
 
+	arch_advertise_page_mapping(start, end);
 	flush_cache_vmap(start, end);
 
 	return err;
diff --git a/mm/vmalloc.c b/mm/vmalloc.c
index c42872ed82ac..3ebbdd5a28e2 100644
--- a/mm/vmalloc.c
+++ b/mm/vmalloc.c
@@ -210,6 +210,10 @@ static int vmap_p4d_range(pgd_t *pgd, unsigned long addr,
 	return 0;
 }
 
+void __weak arch_advertise_page_mapping(unsigned long start, unsigned long end)
+{
+}
+
 /*
  * Set up page tables in kva (addr, end). The ptes shall have prot "prot", and
  * will have pfns corresponding to the "pages" array.
@@ -234,6 +238,8 @@ static int vmap_page_range_noflush(unsigned long start, unsigned long end,
 			return err;
 	} while (pgd++, addr = next, addr != end);
 
+	arch_advertise_page_mapping(start, end);
+
 	return nr;
 }
 
-- 
2.16.4

