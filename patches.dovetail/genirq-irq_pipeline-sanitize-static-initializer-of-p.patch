From 834dde724f312921e2d5cb1d5cb91852f63f3b0a Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Fri, 26 Apr 2019 08:22:57 +0200
Subject: [PATCH] genirq: irq_pipeline: sanitize static initializer of percpu
 stage data

irq_pipeline.__curr points at per-cpu memory, so we can't initialize
it statically in a reliable way for all archs.

To address this issue, make __curr an index in the stages[] array.

Signed-off-by: Philippe Gerum <rpm@xenomai.org>
---
 include/linux/irqstage.h | 11 +++++++----
 kernel/irq/pipeline.c    |  6 +++---
 2 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/include/linux/irqstage.h b/include/linux/irqstage.h
index bd308e7dc2f4..b7fb0a64a6f4 100644
--- a/include/linux/irqstage.h
+++ b/include/linux/irqstage.h
@@ -48,7 +48,7 @@ struct irq_stage_data {
 /* Per-CPU pipeline descriptor. */
 struct irq_pipeline_data {
 	struct irq_stage_data stages[2];
-	struct irq_stage_data *__curr;
+	int __curr;
 	struct pt_regs tick_regs;
 #ifdef CONFIG_DOVETAIL
 	struct task_struct *task_inflight;
@@ -122,7 +122,7 @@ static inline struct irq_stage_data *this_oob_staged(void)
  */
 static inline struct irq_stage_data *__current_staged(void)
 {
-	return raw_cpu_read(irq_pipeline.__curr);
+	return &raw_cpu_ptr(irq_pipeline.stages)[raw_cpu_read(irq_pipeline.__curr)];
 }
 
 #define current_staged __current_staged()
@@ -131,14 +131,17 @@ static inline
 void __set_current_staged(struct irq_stage_data *pd)
 {
 	struct irq_pipeline_data *p = raw_cpu_ptr(&irq_pipeline);
-	p->__curr = pd;
 #ifdef CONFIG_DEBUG_IRQ_PIPELINE
 	/*
 	 * Setting our context with another processor's is a really
 	 * bad idea, our caller definitely went loopy.
 	 */
-	WARN_ON_ONCE(raw_smp_processor_id() != pd->cpu);
+	if (WARN_ON_ONCE(raw_smp_processor_id() != pd->cpu)) {
+		p->__curr = pd - &per_cpu(irq_pipeline.stages, pd->cpu)[0];
+		return;
+	}
 #endif
+	p->__curr = pd - &raw_cpu_ptr(irq_pipeline.stages)[0];
 }
 
 /**
diff --git a/kernel/irq/pipeline.c b/kernel/irq/pipeline.c
index ff2dca8970cc..962550ca59af 100644
--- a/kernel/irq/pipeline.c
+++ b/kernel/irq/pipeline.c
@@ -77,7 +77,7 @@ DEFINE_PER_CPU(struct irq_pipeline_data, irq_pipeline) = {
 			.status = (1 << STAGE_STALL_BIT),
 		},
 	},
-	.__curr = &irq_pipeline.stages[0],
+	.__curr = 0,
 };
 
 #else /* !CONFIG_SMP */
@@ -101,7 +101,7 @@ DEFINE_PER_CPU(struct irq_pipeline_data, irq_pipeline) = {
 			},
 		},
 	},
-	.__curr = &irq_pipeline.stages[0],
+	.__curr = 0,
 };
 
 #endif /* !CONFIG_SMP */
@@ -1443,7 +1443,7 @@ static inline void fixup_percpu_data(void)
 
 	for_each_possible_cpu(cpu) {
 		p = &per_cpu(irq_pipeline, cpu);
-		p->__curr = &p->stages[0];
+		p->__curr = 0;
 		p->stages[0].stage = &inband_stage;
 		p->stages[0].log.map = &per_cpu(irq_map_array, cpu)[0];
 		p->stages[1].log.map = &per_cpu(irq_map_array, cpu)[1];
-- 
2.16.4

