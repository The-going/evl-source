From 6e146fd97f6afdf792a517cb205d208def9c23a5 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Thu, 24 Jan 2019 19:03:11 +0100
Subject: [PATCH] evl: add ksem API

---
 include/evenless/ksem.h  | 30 +++++++++++++++++++
 include/evenless/xbuf.h  |  2 +-
 kernel/evenless/Makefile |  1 +
 kernel/evenless/ksem.c   | 78 ++++++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 110 insertions(+), 1 deletion(-)
 create mode 100644 include/evenless/ksem.h
 create mode 100644 kernel/evenless/ksem.c

diff --git a/include/evenless/ksem.h b/include/evenless/ksem.h
new file mode 100644
index 00000000000..726c263be9e
--- /dev/null
+++ b/include/evenless/ksem.h
@@ -0,0 +1,30 @@
+/*
+ * SPDX-License-Identifier: GPL-2.0
+ *
+ * Copyright (C) 2019 Philippe Gerum  <rpm@xenomai.org>
+ */
+
+#ifndef _EVENLESS_KSEM_H
+#define _EVENLESS_KSEM_H
+
+#include <linux/ktime.h>
+#include <evenless/synch.h>
+
+struct evl_ksem {
+	unsigned int value;
+	struct evl_syn wait_queue;
+};
+
+void evl_init_sem(struct evl_ksem *sem,
+		  unsigned int value);
+
+void evl_destroy_sem(struct evl_ksem *sem);
+
+int evl_down_timeout(struct evl_ksem *sem,
+		     ktime_t timeout);
+
+int evl_down(struct evl_ksem *sem);
+
+void evl_up(struct evl_ksem *sem);
+
+#endif /* !_EVENLESS_KSEM_H */
diff --git a/include/evenless/xbuf.h b/include/evenless/xbuf.h
index 0489594e237..776f917eada 100644
--- a/include/evenless/xbuf.h
+++ b/include/evenless/xbuf.h
@@ -7,7 +7,7 @@
 #ifndef _EVENLESS_XBUF_H
 #define _EVENLESS_XBUF_H
 
-#include <evenless/factory.h>
+#include <linux/types.h>
 
 struct evl_file;
 struct evl_xbuf;
diff --git a/kernel/evenless/Makefile b/kernel/evenless/Makefile
index 4037a825cb3..528cd3cfaf0 100644
--- a/kernel/evenless/Makefile
+++ b/kernel/evenless/Makefile
@@ -9,6 +9,7 @@ evenless-y :=		\
 	file.o		\
 	init.o		\
 	irq.o		\
+	ksem.o		\
 	lock.o		\
 	logger.o	\
 	mapper.o	\
diff --git a/kernel/evenless/ksem.c b/kernel/evenless/ksem.c
new file mode 100644
index 00000000000..d48fbf42ea8
--- /dev/null
+++ b/kernel/evenless/ksem.c
@@ -0,0 +1,78 @@
+/*
+ * SPDX-License-Identifier: GPL-2.0
+ *
+ * Copyright (C) 2019 Philippe Gerum  <rpm@xenomai.org>
+ */
+
+#include <evenless/timer.h>
+#include <evenless/synch.h>
+#include <evenless/clock.h>
+#include <evenless/sched.h>
+#include <evenless/ksem.h>
+
+void evl_init_sem(struct evl_ksem *sem, unsigned int value)
+{
+	sem->value = value;
+	evl_init_syn(&sem->wait_queue, EVL_SYN_PRIO,
+		     &evl_mono_clock, NULL);
+}
+EXPORT_SYMBOL_GPL(evl_init_sem);
+
+void evl_destroy_sem(struct evl_ksem *sem)
+{
+	evl_destroy_syn(&sem->wait_queue);
+}
+EXPORT_SYMBOL_GPL(evl_destroy_sem);
+
+static int down_sem(struct evl_ksem *sem,
+		    ktime_t timeout, enum evl_tmode tmode)
+{
+	unsigned long flags;
+	int ret = 0;
+
+	xnlock_get_irqsave(&nklock, flags);
+
+	if (sem->value > 0)
+		--sem->value;
+	else if (timeout_nonblock(timeout))
+		ret = -EWOULDBLOCK;
+	else {
+		ret = evl_sleep_on_syn(&sem->wait_queue, timeout, tmode);
+		if (ret & T_TIMEO)
+			ret = -ETIMEDOUT;
+		else if (ret & T_RMID)
+			ret = -EIDRM;
+		else if (ret & T_BREAK)
+			ret = -EINTR;
+	}
+
+	xnlock_put_irqrestore(&nklock, flags);
+
+	return ret;
+}
+
+int evl_down_timeout(struct evl_ksem *sem, ktime_t timeout)
+{
+	return down_sem(sem, timeout, EVL_ABS);
+}
+EXPORT_SYMBOL_GPL(evl_down_timeout);
+
+int evl_down(struct evl_ksem *sem)
+{
+	return down_sem(sem, EVL_INFINITE, EVL_REL);
+}
+EXPORT_SYMBOL_GPL(evl_down);
+
+void evl_up(struct evl_ksem *sem)
+{
+	unsigned long flags;
+
+	if (evl_wake_up_syn(&sem->wait_queue))
+		evl_schedule();
+	else {
+		xnlock_get_irqsave(&nklock, flags);
+		sem->value++;
+		xnlock_put_irqrestore(&nklock, flags);
+	}
+}
+EXPORT_SYMBOL_GPL(evl_up);
-- 
2.16.4

