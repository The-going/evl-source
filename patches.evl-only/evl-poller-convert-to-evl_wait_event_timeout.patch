From 783dedd2e81164bcbeba6e4a1507f7b2ba3b6377 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Sun, 3 Feb 2019 12:35:40 +0100
Subject: [PATCH] evl/poller: convert to evl_wait_event_timeout()

---
 kernel/evenless/poller.c | 20 ++++++--------------
 1 file changed, 6 insertions(+), 14 deletions(-)

diff --git a/kernel/evenless/poller.c b/kernel/evenless/poller.c
index 2ea832fa70b..5130b93c306 100644
--- a/kernel/evenless/poller.c
+++ b/kernel/evenless/poller.c
@@ -400,9 +400,8 @@ int wait_events(struct file *filp,
 		struct evl_poller_waitreq *wreq)
 {
 	enum evl_tmode tmode;
-	unsigned long flags;
 	ktime_t timeout;
-	int info, count;
+	int ret, count;
 
 	if (wreq->nrevents < 0 || wreq->nrevents > poller->nodenr)
 		return -EINVAL;
@@ -427,20 +426,13 @@ int wait_events(struct file *filp,
 
 	timeout = timespec_to_ktime(wreq->timeout);
 	tmode = timeout ? EVL_ABS : EVL_REL;
-
-	xnlock_get_irqsave(&nklock, flags);
-
-	info = 0;
-	if (!poller->readied)
-		info = evl_wait_timeout(&poller->wait_queue, timeout, tmode);
-
-	xnlock_put_irqrestore(&nklock, flags);
-	if (info)
-		/* No way we could have received T_RMID. */
-		count = info & T_BREAK ? -EINTR : -ETIMEDOUT;
-	else
+	ret = evl_wait_event_timeout(&poller->wait_queue, timeout,
+				tmode, poller->readied);
+	if (ret == 0)
 		count = collect_events(poller, wreq->events,
 				wreq->nrevents, false);
+	else
+		count = ret;
 unwait:
 	clear_wait();
 
-- 
2.16.4

