From 00e7a71912a86508b298631c1c786731370aa119 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Tue, 8 Oct 2019 16:18:28 +0200
Subject: [PATCH] evl/monitor: commit PP unlocked in enter_monitor()

In addition, don't attempt to (re-)commit PP pointlessly on return
from evl_wait_timeout() (wait_monitor() -> __enter_monitor()), since a
blocked state has happened which guarantees PP was committed before we
were put to sleep. Therefore we can move the PP commit op from
__enter_monitor() to enter_monitor().
---
 kernel/evl/monitor.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/kernel/evl/monitor.c b/kernel/evl/monitor.c
index 5dcd1e496605..018263e86a19 100644
--- a/kernel/evl/monitor.c
+++ b/kernel/evl/monitor.c
@@ -186,8 +186,6 @@ static int __enter_monitor(struct evl_monitor *gate,
 	enum evl_tmode tmode;
 	int info;
 
-	evl_commit_monitor_ceiling();
-
 	if (req) {
 		if ((unsigned long)req->timeout.tv_nsec >= ONE_BILLION)
 			return -EINVAL;
@@ -215,12 +213,15 @@ static int enter_monitor(struct evl_monitor *gate,
 	unsigned long flags;
 	int ret;
 
+	no_ugly_lock();
+
 	if (gate->type != EVL_MONITOR_GATE)
 		return -EINVAL;
 
 	if (evl_is_mutex_owner(gate->lock.fastlock, fundle_of(curr)))
 		return -EDEADLK; /* Deny recursive locking. */
 
+	evl_commit_monitor_ceiling();
 	xnlock_get_irqsave(&nklock, flags);
 	ret = __enter_monitor(gate, req);
 	xnlock_put_irqrestore(&nklock, flags);
-- 
2.16.4

