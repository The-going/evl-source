From 31c33756de110bcec219aa99adc0348876908d39 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Mon, 11 Mar 2019 16:40:37 +0100
Subject: [PATCH] evl/sem: rename to evl_ksem for consistency with evl_kmutex

---
 include/evl/sem.h | 14 +++++++-------
 kernel/evl/sem.c  | 42 +++++++++++++++++++++---------------------
 2 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/include/evl/sem.h b/include/evl/sem.h
index a7c5ea11965..11b82e9f809 100644
--- a/include/evl/sem.h
+++ b/include/evl/sem.h
@@ -10,23 +10,23 @@
 #include <linux/ktime.h>
 #include <evl/wait.h>
 
-struct evl_sem {
+struct evl_ksem {
 	unsigned int value;
 	struct evl_wait_queue wait_queue;
 };
 
-void evl_init_sem(struct evl_sem *sem,
+void evl_init_ksem(struct evl_ksem *ksem,
 		unsigned int value);
 
-void evl_destroy_sem(struct evl_sem *sem);
+void evl_destroy_ksem(struct evl_ksem *ksem);
 
-int evl_down_timeout(struct evl_sem *sem,
+int evl_down_timeout(struct evl_ksem *ksem,
 		ktime_t timeout);
 
-int evl_down(struct evl_sem *sem);
+int evl_down(struct evl_ksem *ksem);
 
-int evl_trydown(struct evl_sem *sem);
+int evl_trydown(struct evl_ksem *ksem);
 
-void evl_up(struct evl_sem *sem);
+void evl_up(struct evl_ksem *ksem);
 
 #endif /* !_EVL_SEM_H */
diff --git a/kernel/evl/sem.c b/kernel/evl/sem.c
index 7f15ea4e38e..10f316575d1 100644
--- a/kernel/evl/sem.c
+++ b/kernel/evl/sem.c
@@ -10,64 +10,64 @@
 #include <evl/sched.h>
 #include <evl/sem.h>
 
-void evl_init_sem(struct evl_sem *sem, unsigned int value)
+void evl_init_ksem(struct evl_ksem *ksem, unsigned int value)
 {
-	sem->value = value;
-	evl_init_wait(&sem->wait_queue, &evl_mono_clock, EVL_WAIT_PRIO);
+	ksem->value = value;
+	evl_init_wait(&ksem->wait_queue, &evl_mono_clock, EVL_WAIT_PRIO);
 }
-EXPORT_SYMBOL_GPL(evl_init_sem);
+EXPORT_SYMBOL_GPL(evl_init_ksem);
 
-void evl_destroy_sem(struct evl_sem *sem)
+void evl_destroy_ksem(struct evl_ksem *ksem)
 {
-	evl_destroy_wait(&sem->wait_queue);
+	evl_destroy_wait(&ksem->wait_queue);
 }
-EXPORT_SYMBOL_GPL(evl_destroy_sem);
+EXPORT_SYMBOL_GPL(evl_destroy_ksem);
 
-static bool down_sem(struct evl_sem *sem)
+static bool down_ksem(struct evl_ksem *ksem)
 {
-	if (sem->value > 0) {
-		--sem->value;
+	if (ksem->value > 0) {
+		--ksem->value;
 		return true;
 	}
 
 	return false;
 }
 
-int evl_down_timeout(struct evl_sem *sem, ktime_t timeout)
+int evl_down_timeout(struct evl_ksem *ksem, ktime_t timeout)
 {
-	return evl_wait_event_timeout(&sem->wait_queue, timeout,
-				EVL_ABS, down_sem(sem));
+	return evl_wait_event_timeout(&ksem->wait_queue, timeout,
+				EVL_ABS, down_ksem(ksem));
 }
 EXPORT_SYMBOL_GPL(evl_down_timeout);
 
-int evl_down(struct evl_sem *sem)
+int evl_down(struct evl_ksem *ksem)
 {
-	return evl_wait_event_timeout(&sem->wait_queue, EVL_INFINITE,
-				EVL_REL, down_sem(sem));
+	return evl_wait_event_timeout(&ksem->wait_queue, EVL_INFINITE,
+				EVL_REL, down_ksem(ksem));
 }
 EXPORT_SYMBOL_GPL(evl_down);
 
-int evl_trydown(struct evl_sem *sem)
+int evl_trydown(struct evl_ksem *ksem)
 {
 	unsigned long flags;
 	bool ret;
 
 	xnlock_get_irqsave(&nklock, flags);
-	ret = down_sem(sem);
+	ret = down_ksem(ksem);
 	xnlock_put_irqrestore(&nklock, flags);
 
 	return ret ? 0 : -EAGAIN;
 }
 EXPORT_SYMBOL_GPL(evl_trydown);
 
-void evl_up(struct evl_sem *sem)
+void evl_up(struct evl_ksem *ksem)
 {
 	unsigned long flags;
 
 	xnlock_get_irqsave(&nklock, flags);
 
-	if (!evl_wake_up_head(&sem->wait_queue))
-		sem->value++;
+	if (!evl_wake_up_head(&ksem->wait_queue))
+		ksem->value++;
 
 	xnlock_put_irqrestore(&nklock, flags);
 
-- 
2.16.4

