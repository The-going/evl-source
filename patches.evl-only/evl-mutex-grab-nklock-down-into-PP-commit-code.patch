From 892694727e05ea64b193dcf72cb5871ff039525a Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Tue, 8 Oct 2019 16:07:47 +0200
Subject: [PATCH] evl/mutex: grab nklock down into PP commit code

---
 kernel/evl/mutex.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/kernel/evl/mutex.c b/kernel/evl/mutex.c
index 8dbccda5f5e0..903a6dd765f5 100644
--- a/kernel/evl/mutex.c
+++ b/kernel/evl/mutex.c
@@ -858,9 +858,10 @@ void evl_commit_mutex_ceiling(struct evl_mutex *mutex)
 {
 	struct evl_thread *curr = evl_current();
 	atomic_t *lockp = mutex->fastlock;
+	unsigned long flags;
 	fundle_t oldh, h;
 
-	requires_ugly_lock();
+	xnlock_get_irqsave(&nklock, flags);
 
 	/*
 	 * For PP locks, userland does, in that order:
@@ -892,7 +893,7 @@ void evl_commit_mutex_ceiling(struct evl_mutex *mutex)
 	 */
 	if (!evl_is_mutex_owner(lockp, fundle_of(curr)) ||
 		(mutex->flags & EVL_MUTEX_CEILING))
-		return;
+		goto out;
 
 	ref_and_track_owner(mutex, curr);
 	ceil_owner_priority(mutex);
@@ -904,4 +905,6 @@ void evl_commit_mutex_ceiling(struct evl_mutex *mutex)
 		h = atomic_read(lockp);
 		oldh = atomic_cmpxchg(lockp, h, mutex_fast_ceil(h));
 	} while (oldh != h);
+out:
+	xnlock_put_irqrestore(&nklock, flags);
 }
-- 
2.16.4

