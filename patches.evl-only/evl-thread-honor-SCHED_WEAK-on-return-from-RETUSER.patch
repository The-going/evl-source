From cbafe78639e052b4ab2ac324ecfe2e44984d5186 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Sun, 16 Feb 2020 11:36:00 +0100
Subject: [PATCH] evl/thread: honor SCHED_WEAK on return from RETUSER

A thread undergoing the SCHED_WEAK policy should resume back in-band
upon return from the RETUSER event unless the inband_disable count
bars it, once it has transitioned through the out-of-band context.
---
 kernel/evl/thread.c | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/kernel/evl/thread.c b/kernel/evl/thread.c
index e0913291d4b8..88a35db6a90b 100644
--- a/kernel/evl/thread.c
+++ b/kernel/evl/thread.c
@@ -1799,6 +1799,13 @@ static void handle_retuser_event(void)
 	struct evl_thread *curr = evl_current();
 	int ret;
 
+	if (!(curr->state & T_PTRACE))
+		return;
+
+	/*
+	 * We have to switch oob in order to complete ptrace_sync()
+	 * since we might have to wait there.
+	 */
 	ret = evl_switch_oob();
 	if (ret) {
 		/* Ask for retry until we succeed. */
@@ -1806,13 +1813,15 @@ static void handle_retuser_event(void)
 		return;
 	}
 
-	if (curr->state & T_PTRACE) {
-		ret = ptrace_sync();
-		if (ret)
-			dovetail_request_ucall(current);
+	ret = ptrace_sync();
+	if (ret)
+		dovetail_request_ucall(current);
 
-		evl_schedule();
-	}
+	evl_schedule();
+
+	if ((curr->state & T_WEAK) &&
+		atomic_read(&curr->inband_disable_count) == 0)
+		evl_switch_inband(SIGDEBUG_NONE);
 }
 
 static void handle_cleanup_event(struct mm_struct *mm)
-- 
2.16.4

